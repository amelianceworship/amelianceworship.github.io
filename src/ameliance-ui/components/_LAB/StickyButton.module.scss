@use "../../styles/globals/" as *;

.StickyButton {
	--sticky-button-offset-init: calc(-100% + var(--gap));
	--sticky-button-offset-prev: var(--sticky-button-offset-init);
	--sticky-button-offset: 1000%;
	position: fixed;
	right: var(--gap);
	bottom: 0;
	z-index: 10;
	background-color: var(--color--b1-2);
	border-radius: 50%;
	@extend %box-shadow--default;
	transform: translateY(var(--sticky-button-offset-init));
}

.StickyButton {
	&.show {
		&.slideIn {
			animation: slide-in-show-animation ease-in-out 0.4s forwards;
		}
		&.popup {
			animation: popup-show-animation ease-in-out 0.2s forwards;
		}
	}

	&.hide {
		&.slideIn {
			animation: slide-in-hide-animation ease-in-out 0.4s forwards;
		}
		&.popup {
			animation: popup-hide-animation ease-in-out 0.2s forwards;
		}
	}
}

@keyframes slide-in-show-animation {
	0% {
		transform: translateY(calc(var(--sticky-button-offset) * 2));
	}
	100% {
		transform: translateY(0);
	}
}

@keyframes slide-in-hide-animation {
	0% {
		transform: translateY(0);
	}
	100% {
		transform: translateY(calc(var(--sticky-button-offset) * 2));
	}
}

@keyframes popup-show-animation {
	0% {
		transform: scale(0%);
	}
	100% {
		transform: scale(100%);
	}
}

@keyframes popup-hide-animation {
	0% {
		transform: scale(100%);
	}
	100% {
		transform: scale(0%);
	}
}

.StickyButton.moveOffset {
	animation: move-offset-animation 0.4s forwards;
}

@keyframes move-offset-animation {
	0% {
		transform: translateY(var(--sticky-button-offset-prev));
	}
	100% {
		transform: translateY(var(--sticky-button-offset));
	}
}
